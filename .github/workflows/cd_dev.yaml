name: RERUM Server v1 Development Deploy on PR to main.
on:
  pull_request:
    branches: main
jobs:
  merge-branch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Merge with main
        uses: devmasx/merge-branch@master
        with:
          type: now
          from_branch: main
          target_branch: ${{ github.head_ref }}
          github_token: ${{ secrets.BRY_PAT }}
          message: Merge main into this branch to deploy to dev for testing.
  test:
    needs: merge-branch
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Create .env from secrets
        uses: SpicyPizza/create-envfile@v2
        with:
          envkey_RERUM_API_VERSION: ${{ secrets.RERUM_API_VERSION }}
          envkey_RERUM_BASE: ${{ secrets.RERUM_BASE }}
          envkey_RERUM_PREFIX: ${{ secrets.RERUM_PREFIX }}
          envkey_RERUM_ID_PREFIX: ${{ secrets.RERUM_ID_PREFIX }}
          envkey_RERUM_AGENT_CLAIM: ${{ secrets.RERUM_AGENT_CLAIM }}
          envkey_RERUM_CONTEXT: ${{ secrets.RERUM_CONTEXT }}
          envkey_RERUM_API_DOC: ${{ secrets.RERUM_API_DOC }}
          envkey_RERUMSECRET: ${{ secrets.RERUMSECRET }}
          envkey_BOT_AGENT: ${{ secrets.BOT_AGENT_DEV }}
          envkey_BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          envkey_MONGO_CONNECTION_STRING: ${{ secrets.MONGO_CONNECTION_STRING_TESTS }}
          envkey_MONGODBNAME: ${{ secrets.MONGODBNAME }}
          envkey_MONGODBCOLLECTION: ${{ secrets.MONGODBCOLLECTION }}
          envkey_DOWN: ${{ secrets.DOWN }}
          envkey_READONLY: ${{ secrets.READONLY }}
          envkey_CLIENTID: ${{ secrets.CLIENTID }}
          envkey_AUDIENCE: ${{ secrets.AUDIENCE }}
          envkey_ISSUER_BASE_URL: ${{ secrets.ISSUER_BASE_URL }}
      - name: Setup Node.js
        uses: actions/setup-node@master
        with:
          node-version: "20"
      - name: Cache node modules
        uses: actions/cache@master
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{
            hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies and run the test
        run: |
          npm install
          npm run runtest
  deploy:
    if: github.event.pull_request.draft == false
    needs:
      - merge-branch
      - test
    strategy:
      matrix:
        node-version:
          - 20
        machines:
          - vlcdhp02
    runs-on: ${{ matrix.machines }}
    steps:
      - uses: actions/checkout@master
      - name: Deploy the app on the server
        run: |
          if [[ ! -e /srv/node/logs/rerumv1.txt ]]; then
              mkdir -p /srv/node/logs
              touch /srv/node/logs/rerumv1.txt
          fi
          cd /srv/node/v1-node/
          pm2 stop rerum_v1
          git stash
          git pull
          npm install
          pm2 start -i max bin/rerum_v1.js
